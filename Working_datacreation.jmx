<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Load User Creation" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_RD" elementType="Argument">
            <stringProp name="Argument.name">P_RD</stringProp>
            <stringProp name="Argument.value">1500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_CD" elementType="Argument">
            <stringProp name="Argument.name">P_CD</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">api.dev.developercommunity.hidcloud.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_Var" elementType="Argument">
            <stringProp name="Argument.name">DB_Var</stringProp>
            <stringProp name="Argument.value">HID_DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_FilePath" elementType="Argument">
            <stringProp name="Argument.name">P_FilePath</stringProp>
            <stringProp name="Argument.value">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/CreatedData</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_FilePath2" elementType="Argument">
            <stringProp name="Argument.name">P_FilePath2</stringProp>
            <stringProp name="Argument.value">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfUser" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfUser</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfProGrop" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfProGrop</stringProp>
            <stringProp name="Argument.value">25</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfProduct" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfProduct</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPckage_Group" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPckage_Group</stringProp>
            <stringProp name="Argument.value">25</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPackage" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPackage</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfFile_to_Package_Min" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfFile_to_Package_Min</stringProp>
            <stringProp name="Argument.value">15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfFile_to_Package_Max" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfFile_to_Package_Max</stringProp>
            <stringProp name="Argument.value">40</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PRO_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_PRO_User_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PRO_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_PRO_User_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PROGRP_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_PROGRP_User_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PROGRP_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_PROGRP_User_MAX</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_PROGRP_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_PROGRP_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_PROGRP_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_PROGRP_MAX</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPck_PCKGRP_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPck_PCKGRP_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPck_PCKGRP_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPck_PCKGRP_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_PCKGRP_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_PCKGRP_User_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_PCKGRP_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_PCKGRP_User_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_File_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_File_User_MIN</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_File_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_File_User_MAX</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_User_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_User_MAX</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_Tag" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_Tag</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfComments_Topic_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfComments_Topic_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfComments_Topic_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfComments_Topic_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_Tag_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_Tag_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_Tag_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_Tag_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Topic_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Topic_MIN</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Topic_Max" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Topic_Max</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfKnowledge" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfKnowledge</stringProp>
            <stringProp name="Argument.value">25</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Know_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Know_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Know_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Know_MAX</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_ProProGrp_User" elementType="Argument">
            <stringProp name="Argument.name">P_ProProGrp_User</stringProp>
            <stringProp name="Argument.value">0.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_OnlyPro_User" elementType="Argument">
            <stringProp name="Argument.name">P_OnlyPro_User</stringProp>
            <stringProp name="Argument.value">0.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_OnlyProGrp" elementType="Argument">
            <stringProp name="Argument.name">P_OnlyProGrp</stringProp>
            <stringProp name="Argument.value">0.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Smoke_User " enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_RD" elementType="Argument">
            <stringProp name="Argument.name">P_RD</stringProp>
            <stringProp name="Argument.value">1500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_CD" elementType="Argument">
            <stringProp name="Argument.name">P_CD</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">api.dev.developercommunity.hidcloud.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_Var" elementType="Argument">
            <stringProp name="Argument.name">DB_Var</stringProp>
            <stringProp name="Argument.value">HID_DB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_FilePath" elementType="Argument">
            <stringProp name="Argument.name">P_FilePath</stringProp>
            <stringProp name="Argument.value">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/CreatedData</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_FilePath2" elementType="Argument">
            <stringProp name="Argument.name">P_FilePath2</stringProp>
            <stringProp name="Argument.value">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfUser" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfUser</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfProGrop" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfProGrop</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfProduct" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfProduct</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPckage_Group" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPckage_Group</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPackage" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPackage</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfFile_to_Package_Min" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfFile_to_Package_Min</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfFile_to_Package_Max" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfFile_to_Package_Max</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PRO_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_PRO_User_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PRO_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_PRO_User_MAX</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PROGRP_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_PROGRP_User_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_PROGRP_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_PROGRP_User_MAX</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_PROGRP_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_PROGRP_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_PROGRP_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_PROGRP_MAX</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPck_PCKGRP_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPck_PCKGRP_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPck_PCKGRP_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPck_PCKGRP_MAX</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_PCKGRP_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_PCKGRP_User_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_PCKGRP_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_PCKGRP_User_MAX</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_File_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_File_User_MIN</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_File_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_File_User_MAX</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_User_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_User_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_User_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_User_MAX</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOf_Tag" elementType="Argument">
            <stringProp name="Argument.name">P_NoOf_Tag</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfComments_Topic_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfComments_Topic_MIN</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfComments_Topic_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfComments_Topic_MAX</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_Tag_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_Tag_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfTopic_Tag_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfTopic_Tag_MAX</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Topic_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Topic_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Topic_Max" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Topic_Max</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfKnowledge" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfKnowledge</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Know_MIN" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Know_MIN</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_NoOfPro_Know_MAX" elementType="Argument">
            <stringProp name="Argument.name">P_NoOfPro_Know_MAX</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_ProProGrp_User" elementType="Argument">
            <stringProp name="Argument.name">P_ProProGrp_User</stringProp>
            <stringProp name="Argument.value">0.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_OnlyPro_User" elementType="Argument">
            <stringProp name="Argument.name">P_OnlyPro_User</stringProp>
            <stringProp name="Argument.value">0.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_OnlyProGrp" elementType="Argument">
            <stringProp name="Argument.name">P_OnlyProGrp</stringProp>
            <stringProp name="Argument.value">0.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <stringProp name="dataSource">${DB_Var}</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="dbUrl">jdbc:mysql://djangodbinstance.cx1xoq7gnlxx.us-east-1.rds.amazonaws.com</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">aspire_user</stringProp>
        <stringProp name="password">abc123mno</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Country&amp;State" enabled="true">
        <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/Data/Country&amp;State.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_countryId,P_stateName</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login CSV data" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">HID_LoginCredentials.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">P_username,P_password,P_fileId</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Topic Search CSV" enabled="true">
        <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/Data/Topic Search data.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_topicSearch,P_Tafter,P_Tfirst</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Knowledge Search CSV" enabled="true">
        <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/Data/Knowledge Search data.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_knowledgeSearch,P_Kafter,P_Kfirst</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Package Search CSV" enabled="true">
        <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/Data/Package Search data.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">P_packageSearch,P_Pafter,P_Pfirst</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="TC_01_Create&amp;Approve_UserLoop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfUser}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="917654540">P_firstname</stringProp>
              <stringProp name="90660144">P_lastname</stringProp>
              <stringProp name="-1099694400">P_phoneno</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-199505056">
                <stringProp name="-601203091">ASPIRE_QA_${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
                <stringProp name="-601203091">ASPIRE_QA_${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
                <stringProp name="-351100523">${__RandomString(10,1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation userAdd($username: String!, $password: String!, $email: String!, $firstName: String!, $lastName: String!, $phone: String!, $areaOfInterest: String!, $company: String!, $jobRole: String, $state: String, $countryId: Int!, $employeeId: Int, $imageData: String, $coupon: String, $recaptchaToken: String!) {\r\nuserAdd(username: $username, password: $password, email: $email, firstName: $firstName, lastName: $lastName, phone: $phone, areaOfInterest: $areaOfInterest, company: $company, jobRole: $jobRole, state: $state, countryId: $countryId, employeeId: $employeeId, imageData: $imageData, coupon: $coupon, recaptchaToken: $recaptchaToken) {\r\nuser {\r\nid\r\nprofileId\r\nimageUri\r\nisPremium\r\n__typename\r\n}\r\n__typename\r\n}\r\n}&quot;,&quot;variables&quot;:{&#xd;
&quot;username&quot;: &quot;${P_firstname}.${P_lastname}&quot;,&#xd;
&quot;password&quot;: &quot;Test@123&quot;,&#xd;
&quot;email&quot;: &quot;${P_firstname}.${P_lastname}@perftesthidglobal.com&quot;,&#xd;
&quot;firstName&quot;: &quot;${P_firstname}&quot;,&#xd;
&quot;lastName&quot;: &quot;${P_lastname}&quot;,&#xd;
&quot;phone&quot;: &quot;${P_phoneno}&quot;,&#xd;
&quot;areaOfInterest&quot;: &quot;Testing&quot;,&#xd;
&quot;company&quot;: &quot;ASP_Company&quot;,&#xd;
&quot;jobRole&quot;: &quot;test&quot;,&#xd;
&quot;state&quot;: &quot;${P_stateName}&quot;,&#xd;
&quot;countryId&quot;: ${P_countryId},&#xd;
&quot;employeeId&quot;: 1,&#xd;
&quot;imageData&quot;: &quot;&quot;,&#xd;
&quot;coupon&quot;: &quot;&quot;,&#xd;
&quot;recaptchaToken&quot;: &quot;&quot;&#xd;
}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/graphql/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">975095a6-97f0-433f-80bc-9dcf2b09f28b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">PostmanRuntime/7.28.4</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1005400924">profileId</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_profileId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_profileId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;profileId&quot;:(.*?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Not Found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String profileID=vars.get(&quot;C_profileId&quot;);
String fname=vars.get(&quot;P_firstname&quot;);
String lname=vars.get(&quot;P_lastname&quot;);
String phno=vars.get(&quot;P_phoneno&quot;);
String countryId=vars.get(&quot;P_countryId&quot;);
String state=vars.get(&quot;P_stateName&quot;);
String password=&quot;Test@123&quot;;
String userdata1=profileID+&quot;,&quot;+fname+&quot;.&quot;+lname+&quot;@perftesthidglobal.com,&quot;+fname+&quot;.&quot;+lname+&quot;,&quot;+password+&quot;,&quot;+fname+&quot;,&quot;+lname+&quot;,&quot;+phno+&quot;,&quot;+countryId+&quot;,&quot;+state;
File_1 = new FileOutputStream(&quot;${P_FilePath}/New_Userdata.csv&quot;, true);
obj = new PrintStream(File_1);
this.interpreter.setOut(obj);
print(userdata1);
File_1.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String fname=vars.get(&quot;P_firstname&quot;);
String lname=vars.get(&quot;P_lastname&quot;);
String password=&quot;Test@123&quot;;
String dataUI=fname+&quot;.&quot;+lname+&quot;@perftesthidglobal.com,&quot;+password+&quot;,&quot;+fname+&quot;,&quot;+lname;
File_2 = new FileOutputStream(&quot;${P_FilePath}/UILogin.csv&quot;, true);
obj = new PrintStream(File_2);
this.interpreter.setOut(obj);
print(dataUI);
File_2.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String profileID=vars.get(&quot;C_profileId&quot;);
File_3 = new FileOutputStream(&quot;${P_FilePath2}/UserProfileID.csv&quot;, true);
obj = new PrintStream(File_3);
this.interpreter.setOut(obj);
print(profileID);
File_3.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Approve User " enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="query">UPDATE `hid_devportal`.`users_profile` SET `is_activated` = &apos;1&apos;, `is_approved` = &apos;1&apos; WHERE (`id`=${C_profileId} );
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="No Of ProGrop_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfProGrop}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1558165119">P_ProductGroup</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Product_Group" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_group` (`name`) VALUES (&quot;ASP_NFT_PRO_GRP_${P_ProductGroup}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_ProGrp_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`products_product_group` WHERE (name=&quot;ASP_NFT_PRO_GRP_${P_ProductGroup}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_ProGrpID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String PRO_GRP_ID=vars.get(&quot;P_ProGrpID_1&quot;);
String PRO_GRP_name=vars.get(&quot;P_ProductGroup&quot;);
String userdata=PRO_GRP_ID+&quot;,ASP_NFT_PRO_GRP_&quot;+PRO_GRP_name;
File_4 = new FileOutputStream(&quot;${P_FilePath}/ProductGroup_Data.csv&quot;, true);
obj = new PrintStream(File_4);
this.interpreter.setOut(obj);
print(userdata);
File_4.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String PRO_GRP_ID=vars.get(&quot;P_ProGrpID_1&quot;);
File_5= new FileOutputStream(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;, true);
obj = new PrintStream(File_5);
this.interpreter.setOut(obj);
print(PRO_GRP_ID);
File_5.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Product_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfProduct}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="850967520">P_Product</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Product" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product` (`name`, `description`, `image_url`) VALUES (&quot;ASP_NFT_PRO_${P_Product}&quot;, &apos;This is a sample Product from Aspire for performance testing&apos;, null);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Pro_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`products_product` WHERE (name=&quot;ASP_NFT_PRO_${P_Product}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_ProID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String PRO_ID=vars.get(&quot;P_ProID_1&quot;);
String PRO_NAME=vars.get(&quot;P_Product&quot;);

String userdata1=PRO_ID+&quot;,ASP_NFT_PRO_&quot;+PRO_NAME;
File_1 = new FileOutputStream(&quot;${P_FilePath}/Product_Data.csv&quot;, true);
obj = new PrintStream(File_1);
this.interpreter.setOut(obj);
print(userdata1);
File_1.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String PRO_ID=vars.get(&quot;P_ProID_1&quot;);
File_2 = new FileOutputStream(&quot;${P_FilePath2}/ProductID.csv&quot;, true);
obj = new PrintStream(File_2);
this.interpreter.setOut(obj);
print(PRO_ID);
File_2.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Pckage_Group_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfPckage_Group}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="552800814">P_PackageGRP</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Package_GRP" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_package_group` (`name`, `file_access_type`) VALUES (&quot;ASP_NFT_PCK_GRP_${P_PackageGRP}&quot;, &quot;all&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PckGrp_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`products_package_group` WHERE (name=&quot;ASP_NFT_PCK_GRP_${P_PackageGRP}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PckGrp_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String PckGrp_ID=vars.get(&quot;P_PckGrp_ID_1&quot;);
String PckGrp_NAME=vars.get(&quot;P_PackageGRP&quot;);

String userdata4=PckGrp_ID+&quot;,ASP_NFT_PCK_GRP_&quot;+PckGrp_NAME;
File_4 = new FileOutputStream(&quot;${P_FilePath}/Package_Group_Data.csv&quot;, true);
obj = new PrintStream(File_4);
this.interpreter.setOut(obj);
print(userdata4);
File_4.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Pckgrp_ID=vars.get(&quot;P_PckGrp_ID_1&quot;);
File_5 = new FileOutputStream(&quot;${P_FilePath2}/PackageGroupID.csv&quot;, true);
obj = new PrintStream(File_5);
this.interpreter.setOut(obj);
print(Pckgrp_ID);
File_5.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Package_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfPackage}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="353379127">P_Package</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Package" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_package` (`name`, `is_available_without_subsription`, `is_required_nda`, `distribution`, `click_thru_id`) VALUES (&quot;ASP_NFT_PCK_${P_Package}&quot;, 1, 0, &quot;unrestricted&quot;, null);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Pck_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`products_package` WHERE (name=&quot;ASP_NFT_PCK_${P_Package}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_Pck_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Pck_ID=vars.get(&quot;P_Pck_ID_1&quot;);
String Pck_NAME=vars.get(&quot;P_Package&quot;);

String userdata4=Pck_ID+&quot;,ASP_NFT_PCK_&quot;+Pck_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Package_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Pck_ID=vars.get(&quot;P_Pck_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/PackageID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(Pck_ID);
File_7.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_package_ Country" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_package_country` (`country_id`, `package_id`) VALUES (${P_countryId},${P_Pck_ID_1});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfPackage}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Package_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/PackageID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_Pck_ID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="variableName">No_of_File_package</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <stringProp name="minimumValue">${P_NoOfFile_to_Package_Min}</stringProp>
            <stringProp name="maximumValue">${P_NoOfFile_to_Package_Max}</stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">false</boolProp>
          </RandomVariableConfig>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File_Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${No_of_File_package}</stringProp>
          </LoopController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="High Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="1862127543">P_DOCX_FileName</stringProp>
                    <stringProp name="-1247027549">P_PDF_FileName</stringProp>
                    <stringProp name="1009303230">P_EXCEL_FileName</stringProp>
                    <stringProp name="1978809684">P_ZIP_FileName</stringProp>
                    <stringProp name="1814387556">P_MP4_FileName</stringProp>
                    <stringProp name="1988350100">P_JPG_FileName</stringProp>
                    <stringProp name="-1985226729">P_DMG_FileName</stringProp>
                    <stringProp name="-304741496">P_FolderName</stringProp>
                    <stringProp name="2061781836">P_PNG_FileName</stringProp>
                    <stringProp name="35216950">P_XLS_FileName</stringProp>
                    <stringProp name="-498108131">P_DOC_FileName</stringProp>
                    <stringProp name="208170849">P_PPT_FileName</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1554701841">
                      <stringProp name="-1253189172">ASPIREQA_DOCX_HIGH_TESTDATA_${__Random(1,3,)}.docx</stringProp>
                      <stringProp name="1806853238">ASPIREQA_PDF_HIGH_TESTDATA_${__Random(1,3,)}.pdf</stringProp>
                      <stringProp name="336451184">ASPIREQA_EXCEL_HIGH_TESTDATA_${__Random(1,3,)}.xlsx</stringProp>
                      <stringProp name="-253262508">ASPIREQA_ZIP_HIGH_TESTDATA_${__Random(1,3,)}.zip</stringProp>
                      <stringProp name="1052896532">ASPIREQA_MP4_HIGH_TESTDATA_${__Random(1,3,)}.mp4</stringProp>
                      <stringProp name="1496559316">ASPIREQA_JPG_HIGH_TESTDATA_${__Random(1,3,)}.jpg</stringProp>
                      <stringProp name="2134242958">ASPIREQA_DMG_HIGH_TESTDATA_${__Random(1,3,)}.dmg</stringProp>
                      <stringProp name="-1786621632">media_packages/2021-09-27</stringProp>
                      <stringProp name="1284790116">ASPIREQA_PNG_HIGH_TESTDATA_${__Random(1,3,)}.png</stringProp>
                      <stringProp name="-1110122480">ASPIREQA_XLS_HIGH_TESTDATA_${__Random(1,3,)}.xls</stringProp>
                      <stringProp name="-214179326">ASPIREQA_DOC_HIGH_TESTDATA_${__Random(1,3,)}.doc</stringProp>
                      <stringProp name="-50088884">ASPIREQA_PPTX_HIGH_TESTDATA_${__Random(1,3,)}.pptx</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">true</boolProp>
                </UserParameters>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOCX" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOCX_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOCX_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOCX_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Docx_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOCX_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Docx_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Docx_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOCX_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Docx_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOC" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOC_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOC_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOC_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Doc_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOC_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Doc_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Doc_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOC_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Doc_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PNG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PNG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PNG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PNG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Png_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PNG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Png_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Png_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PNG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Png_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="XLS" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="XLS_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_XLS_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_XLS_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Xls_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_XLS_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Xls_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Xls_ID_1&quot;);
String file_NAME=vars.get(&quot;P_XLS_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Xls_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDF" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PDF_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PDF_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PDF_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PDF_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PDF_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Pdf_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Pdf_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PDF_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Pdf_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EXCEL" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="EXCEL_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_EXCEL_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_EXCEL_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_EXCEL_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_EXCEL_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Excel_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Excel_ID_1&quot;);
String file_NAME=vars.get(&quot;P_EXCEL_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Excel_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ZIP" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ZIP_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_ZIP_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_ZIP_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_ZIP_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_ZIP_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Zip_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Zip_ID_1&quot;);
String file_NAME=vars.get(&quot;P_ZIP_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Zip_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JPG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JPG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_JPG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_JPG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_JPG_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_JPG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Jpg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Jpg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_JPG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Jpg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DMG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DMG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DMG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DMG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Dmg_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DMG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Dmg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Dmg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DMG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Dmg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PPT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PPT_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PPT_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PPT_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PPT_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PPT_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_PPT_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_PPT_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PPT_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_PPT_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MP4" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MP4_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_MP4_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_MP4_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_MP4_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_MP4_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Mp4_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Mp4_ID_1&quot;);
String file_NAME=vars.get(&quot;P_MP4_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Mp4_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Low Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="1862127543">P_DOCX_FileName</stringProp>
                    <stringProp name="-1247027549">P_PDF_FileName</stringProp>
                    <stringProp name="1009303230">P_EXCEL_FileName</stringProp>
                    <stringProp name="1978809684">P_ZIP_FileName</stringProp>
                    <stringProp name="1814387556">P_MP4_FileName</stringProp>
                    <stringProp name="1988350100">P_JPG_FileName</stringProp>
                    <stringProp name="-1985226729">P_DMG_FileName</stringProp>
                    <stringProp name="-304741496">P_FolderName</stringProp>
                    <stringProp name="2061781836">P_PNG_FileName</stringProp>
                    <stringProp name="35216950">P_XLS_FileName</stringProp>
                    <stringProp name="-498108131">P_DOC_FileName</stringProp>
                    <stringProp name="208170849">P_PPT_FileName</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="-1762593800">
                      <stringProp name="1841854979">ASPIREQA_DOCX_LOW_TESTDATA_${__Random(1,4,)}.docx</stringProp>
                      <stringProp name="83260991">ASPIREQA_PDF_LOW_TESTDATA_${__Random(1,4,)}.pdf</stringProp>
                      <stringProp name="646782001">ASPIREQA_EXCEL_LOW_TESTDATA_${__Random(1,4,)}.xlsx</stringProp>
                      <stringProp name="-1091563553">ASPIREQA_ZIP_LOW_TESTDATA_${__Random(1,4,)}.zip</stringProp>
                      <stringProp name="-1603630657">ASPIREQA_MP4_LOW_TESTDATA_${__Random(1,4,)}.mp4</stringProp>
                      <stringProp name="488888287">ASPIREQA_JPG_LOW_TESTDATA_${__Random(1,4,)}.jpg</stringProp>
                      <stringProp name="-1707304257">ASPIREQA_DMG_LOW_TESTDATA_${__Random(1,4,)}.dmg</stringProp>
                      <stringProp name="-1786621632">media_packages/2021-09-27</stringProp>
                      <stringProp name="1036251871">ASPIREQA_PNG_LOW_TESTDATA_${__Random(1,4,)}.png</stringProp>
                      <stringProp name="-1811942625">ASPIREQA_XLS_LOW_TESTDATA_${__Random(1,4,)}.xls</stringProp>
                      <stringProp name="-259039105">ASPIREQA_DOC_LOW_TESTDATA_${__Random(1,4,)}.doc</stringProp>
                      <stringProp name="-1028481909">ASPIREQA_PPTX_LOW_TESTDATA_${__Random(1,4,)}.pptx</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">true</boolProp>
                </UserParameters>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOCX" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOCX_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOCX_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOCX_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Docx_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOCX_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Docx_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Docx_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOCX_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Docx_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOC" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOC_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOC_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOC_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Doc_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOC_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Doc_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Doc_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOC_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Doc_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PNG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PNG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PNG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PNG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Png_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PNG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Png_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Png_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PNG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Png_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="XLS" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="XLS_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_XLS_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_XLS_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Xls_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_XLS_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Xls_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Xls_ID_1&quot;);
String file_NAME=vars.get(&quot;P_XLS_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Xls_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDF" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PDF_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PDF_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PDF_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PDF_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PDF_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Pdf_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Pdf_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PDF_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Pdf_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EXCEL" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="EXCEL_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_EXCEL_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_EXCEL_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_EXCEL_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_EXCEL_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Excel_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Excel_ID_1&quot;);
String file_NAME=vars.get(&quot;P_EXCEL_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Excel_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ZIP" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ZIP_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_ZIP_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_ZIP_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_ZIP_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_ZIP_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Zip_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Zip_ID_1&quot;);
String file_NAME=vars.get(&quot;P_ZIP_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Zip_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JPG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JPG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_JPG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_JPG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_JPG_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_JPG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Jpg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Jpg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_JPG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Jpg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DMG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DMG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DMG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DMG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Dmg_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DMG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Dmg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Dmg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DMG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Dmg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PPT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PPT_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PPT_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PPT_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PPT_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PPT_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_PPT_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_PPT_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PPT_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_PPT_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MP4" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MP4_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_MP4_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_MP4_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_MP4_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_MP4_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Mp4_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Mp4_ID_1&quot;);
String file_NAME=vars.get(&quot;P_MP4_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Mp4_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Medium Random Controller" enabled="true">
                <intProp name="InterleaveControl.style">1</intProp>
              </RandomController>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="1862127543">P_DOCX_FileName</stringProp>
                    <stringProp name="-1247027549">P_PDF_FileName</stringProp>
                    <stringProp name="1009303230">P_EXCEL_FileName</stringProp>
                    <stringProp name="1978809684">P_ZIP_FileName</stringProp>
                    <stringProp name="1814387556">P_MP4_FileName</stringProp>
                    <stringProp name="1988350100">P_JPG_FileName</stringProp>
                    <stringProp name="-1985226729">P_DMG_FileName</stringProp>
                    <stringProp name="-304741496">P_FolderName</stringProp>
                    <stringProp name="2061781836">P_PNG_FileName</stringProp>
                    <stringProp name="35216950">P_XLS_FileName</stringProp>
                    <stringProp name="-498108131">P_DOC_FileName</stringProp>
                    <stringProp name="208170849">P_PPT_FileName</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="1550223291">
                      <stringProp name="384819231">ASPIREQA_DOCX_MEDIUM_TESTDATA_${__Random(1,3,)}.docx</stringProp>
                      <stringProp name="-1494490173">ASPIREQA_PDF_MEDIUM_TESTDATA_${__Random(1,3,)}.pdf</stringProp>
                      <stringProp name="-1548851709">ASPIREQA_EXCEL_MEDIUM_TESTDATA_${__Random(1,3,)}.xlsx</stringProp>
                      <stringProp name="-1295182623">ASPIREQA_ZIP_MEDIUM_TESTDATA_${__Random(1,3,)}.zip</stringProp>
                      <stringProp name="-194953055">ASPIREQA_MP4_MEDIUM_TESTDATA_${__Random(1,3,)}.mp4</stringProp>
                      <stringProp name="965938785">ASPIREQA_JPG_MEDIUM_TESTDATA_${__Random(1,3,)}.jpg</stringProp>
                      <stringProp name="-394779941">ASPIREQA_DMG_MEDIUM_TESTDATA_${__Random(1,3,)}.dmg</stringProp>
                      <stringProp name="-1786621632">media_packages/2021-09-27</stringProp>
                      <stringProp name="-686275343">ASPIREQA_PNG_MEDIUM_TESTDATA_${__Random(1,3,)}.png</stringProp>
                      <stringProp name="-102141923">ASPIREQA_XLS_MEDIUM_TESTDATA_${__Random(1,3,)}.xls</stringProp>
                      <stringProp name="1924147151">ASPIREQA_DOC_MEDIUM_TESTDATA_${__Random(1,3,)}.doc</stringProp>
                      <stringProp name="873372575">ASPIREQA_PPTX_MEDIUM_TESTDATA_${__Random(1,3,)}.pptx</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">true</boolProp>
                </UserParameters>
                <hashTree/>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOCX" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOCX_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOCX_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOCX_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Docx_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOCX_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Docx_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Docx_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOCX_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Docx_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DOC" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DOC_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DOC_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DOC_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Doc_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DOC_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Doc_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Doc_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DOC_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Doc_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PNG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PNG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PNG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PNG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Png_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PNG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Png_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Png_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PNG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Png_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="XLS" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="XLS_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_XLS_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_XLS_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Xls_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_XLS_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Xls_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Xls_ID_1&quot;);
String file_NAME=vars.get(&quot;P_XLS_FileName&quot;);
String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Xls_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDF" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PDF_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PDF_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PDF_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PDF_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PDF_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Pdf_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Pdf_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PDF_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Pdf_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EXCEL" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="EXCEL_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_EXCEL_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_EXCEL_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_EXCEL_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_EXCEL_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Excel_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Excel_ID_1&quot;);
String file_NAME=vars.get(&quot;P_EXCEL_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Excel_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ZIP" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ZIP_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_ZIP_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_ZIP_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_ZIP_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_ZIP_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Zip_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Zip_ID_1&quot;);
String file_NAME=vars.get(&quot;P_ZIP_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Zip_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JPG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JPG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_JPG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_JPG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_JPG_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_JPG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Jpg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Jpg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_JPG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Jpg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="DMG" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="DMG_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_DMG_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_DMG_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Dmg_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_DMG_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Dmg_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Dmg_ID_1&quot;);
String file_NAME=vars.get(&quot;P_DMG_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Dmg_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PPT" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="PPT_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_PPT_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_PPT_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PPT_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_PPT_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_PPT_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_PPT_ID_1&quot;);
String file_NAME=vars.get(&quot;P_PPT_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_PPT_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MP4" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MP4_File" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="query">INSERT INTO `hid_devportal`.`products_file` (`create_date_time`, `name`, `description`, `version`, `url`, `package_id`) VALUES (sysdate(), &quot;${P_MP4_FileName}&quot;, &quot;This is the Sample documentation from Aspire NFT&quot;, &quot;1&quot;, &quot;${P_FolderName}/${P_MP4_FileName}&quot;,${P_Pck_ID});</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_MP4_ID" enabled="true">
                    <stringProp name="dataSource">${DB_Var}</stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="query">SELECT id FROM `hid_devportal`.`products_file` WHERE (name=&quot;${P_MP4_FileName}&quot;);</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="variableNames">P_Mp4_ID</stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_id=vars.get(&quot;P_Mp4_ID_1&quot;);
String file_NAME=vars.get(&quot;P_MP4_FileName&quot;);

String userdata4=file_id+&quot;,&quot;+file_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/File_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">String file_ID=vars.get(&quot;P_Mp4_ID_1&quot;);
File_7 = new FileOutputStream(&quot;${P_FilePath2}/file_ID.csv&quot;, true);
obj = new PrintStream(File_7);
this.interpreter.setOut(obj);
print(file_ID);
File_7.close();
</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Topic_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfUser}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="User_ID_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/UserProfileID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProflileID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">${P_NoOfTopic_User_MAX}</stringProp>
            <stringProp name="minimumValue">${P_NoOfTopic_User_MIN}</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">No_of_Topic_user</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="No_Of_Topic_Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${No_of_Topic_user}</stringProp>
          </LoopController>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="786613344">P_Topic</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="997735652">
                  <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Topic" enabled="true">
              <stringProp name="dataSource">${DB_Var}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO `hid_devportal`.`topics_topic` (`title`, `description`, `create_date_time`, `is_published`, `is_top`, `is_public`, `video_url`, `profile_id`, `status_id`) VALUES (&quot;ASP_NFT_TOPIC_${P_Topic}&quot;, &quot;This is sample topic from Aspire NFT&quot;, sysdate(), 1, 1, 1, null, ${P_ProflileID}, 1);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Topic_ID" enabled="true">
              <stringProp name="dataSource">${DB_Var}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT id FROM `hid_devportal`.`topics_topic` WHERE (title=&quot;ASP_NFT_TOPIC_${P_Topic}&quot;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">P_TopicID</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String profileId=vars.get(&quot;P_ProflileID&quot;);
String Topic_id=vars.get(&quot;P_TopicID_1&quot;);
String topic_NAME=vars.get(&quot;P_Topic&quot;);
String userdata4=profileId+&quot;,&quot;+Topic_id+&quot;,ASP_NFT_TOPIC_&quot;+topic_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Topic_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String profileId=vars.get(&quot;P_ProflileID&quot;);
String Topic_id=vars.get(&quot;P_TopicID_1&quot;);
String topic_NAME=vars.get(&quot;P_Topic&quot;);
String userdata4=profileId+&quot;,&quot;+Topic_id+&quot;,ASP_NFT_TOPIC_&quot;+topic_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Next_Topic_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">String Topic_id=vars.get(&quot;P_TopicID_1&quot;);
String userdata4=Topic_id;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Topic_ID.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map Topic_TopicCategory" enabled="true">
              <stringProp name="dataSource">${DB_Var}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO `hid_devportal`.`topics_topic_category`(`category_id`, `topic_id`) VALUES (1,${P_TopicID_1});</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Tag_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOf_Tag}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="76795659">P_Tag</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Tag" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`topics_tag` (`text`, `create_date_time`) VALUES ( &quot;ASP_NFT_TAG_${P_Tag}&quot;, sysdate());</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Tag_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`topics_tag` WHERE (text=&quot;ASP_NFT_TAG_${P_Tag}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_TagID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Tag_id=vars.get(&quot;P_TagID_1&quot;);
String tag_NAME=vars.get(&quot;P_Tag&quot;);
String userdata4=Tag_id+&quot;,ASP_NFT_TAG_&quot;+tag_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Tag_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Tag_id=vars.get(&quot;P_TagID_1&quot;);
String tag_NAME=vars.get(&quot;P_Tag&quot;);
String userdata4=Tag_id+&quot;,ASP_NFT_TAG_&quot;+tag_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Tag_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Tag_id=vars.get(&quot;P_TagID_1&quot;);
String userdata4=Tag_id;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Tag_ID.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Next_Topic_Data.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_NoOf_Topic_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Topic_comments Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOf_Topic_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Topic_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Next_Topic_Data.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID,P_TopicID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">${P_NoOfComments_Topic_MAX}</stringProp>
            <stringProp name="minimumValue">${P_NoOfComments_Topic_MIN}</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">No_of_Topic_user</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="No_Of_comments_Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">${No_of_Topic_user}</stringProp>
          </LoopController>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="192587380">P_TopicComments</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="997735652">
                  <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_TopicComments" enabled="true">
              <stringProp name="dataSource">${DB_Var}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">INSERT INTO `hid_devportal`.`topics_comment` ( `text`, `create_date_time`, `parent_comment_id`, `profile_id`, `topic_id`) VALUES (&quot;ASP_NFT_TOPIC_COMMENTS${P_TopicComments}&quot;, sysdate(), null, ${P_ProfID}, ${P_TopicID});</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.lang.Math;
String data=vars.get(&quot;P_NoOfUser&quot;);
int ProGrpUser=Math.round((Integer.parseInt(data))* ${P_ProProGrp_User});
int OnlyProUser=Math.round((Integer.parseInt(data))* ${P_OnlyPro_User});
int OnlyGrpUser=Math.round((Integer.parseInt(data))* ${P_OnlyProGrp});
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/UserProfileID.csv&quot;));
for(int i=0;i&lt;ProGrpUser;i++)
{
	String PID = ProfileID.readLine();
	if(PID==null)
	{
		break;
	}
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Product_ProductGRP_userID.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(PID);
		File_1.close();
		
	
}
for(int i=0;i&lt;OnlyProUser;i++)
{
	
	String PID = ProfileID.readLine();
	if(PID==null)
	{
		break;
	}
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Only_Product_userID.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(PID);
		File_1.close();
		
	
}
for(int i=0;i&lt;OnlyGrpUser;i++)
{
	
	String PID = ProfileID.readLine();
	if(PID==null)
	{
		break;
	}
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Only_ProductGRP_userID.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(PID);
		File_1.close();
}


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mapping_Product_ProductGroup_Profile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="ProGrp_Profile_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Product_ProductGRP_userID.csv&quot;));
BufferedReader ProGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;));
int range=${P_PROGRP_User_MAX}-${P_PROGRP_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_PROGRP_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PGID=ProGrpID.readLine();
		if( PGID== null)
		{
			 ProGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;));
			 PGID=ProGrpID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PGID;
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_ProductGRP.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(data);
		File_1.close();
		
	
	}
}
ProfileID.close();
ProGrpID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_ProductGRP.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_PROF_PROGRP_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ProGrp_Profile_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_PROF_PROGRP_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ProGrp_Profile_CSV" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_ProductGRP.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfileID,P_ProdGrpID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Mapping_ProductGroup_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_group_profile` (`product_group_id`, `profile_id`) VALUES (${P_ProdGrpID},${P_ProfileID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Profile_Product_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Product_ProductGRP_userID.csv&quot;));
BufferedReader ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
int range=${P_PRO_User_MAX}-${P_PRO_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_PRO_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PROID=ProID.readLine();
		if( PROID== null)
		{
			 ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
			 PROID=ProID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PROID;
		File_3 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_Product.csv&quot;, true);
		obj = new PrintStream(File_3);
		this.interpreter.setOut(obj);
		print(data);
		File_3.close();
		
	
	}
}
ProfileID.close();
ProID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_Product.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_PROF_PRO_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Profile_Product_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_PROF_PRO_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Product_Profile_CSV" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_Product.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID,P_ProID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Mapping_Product_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_profile` (`is_enable_product_content`, `product_id`, `profile_id`) VALUES (1, ${P_ProID},${P_ProfID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mapping_Only_Product_ProductGroup_Profile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Only_ProGrp_Profile_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Only_ProductGRP_userID.csv&quot;));
BufferedReader ProGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;));
int range=${P_PROGRP_User_MAX}-${P_PROGRP_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_PROGRP_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PGID=ProGrpID.readLine();
		if( PGID== null)
		{
			 ProGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;));
			 PGID=ProGrpID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PGID;
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_Only_ProductGRP.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(data);
		File_1.close();
		
	
	}
}
ProfileID.close();
ProGrpID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_Only_ProductGRP.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_PROF_Only_PROGRP_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ProGrp_Profile_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_PROF_Only_PROGRP_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ProGrp_Profile_CSV" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_Only_ProductGRP.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfileID,P_ProdGrpID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Mapping_ProductGroup_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_group_profile` (`product_group_id`, `profile_id`) VALUES (${P_ProdGrpID},${P_ProfileID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Profile_Product_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Only_Product_userID.csv&quot;));
BufferedReader ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
int range=${P_PRO_User_MAX}-${P_PRO_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_PRO_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PROID=ProID.readLine();
		if( PROID== null)
		{
			 ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
			 PROID=ProID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PROID;
		File_3 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_Only_Product.csv&quot;, true);
		obj = new PrintStream(File_3);
		this.interpreter.setOut(obj);
		print(data);
		File_3.close();
		
	
	}
}
ProfileID.close();
ProID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_Only_Product.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_PROF_Only_PRO_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Profile_Product_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_PROF_Only_PRO_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Product_Profile_CSV" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_Only_Product.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID,P_ProID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Mapping_Product_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_profile` (`is_enable_product_content`, `product_id`, `profile_id`) VALUES (1, ${P_ProID},${P_ProfID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Add_Product_ProductGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="ProGrp_Product_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductGroupData_ID.csv&quot;));
BufferedReader ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
int range=${P_NoOfPro_PROGRP_MAX}-${P_NoOfPro_PROGRP_MIN}+1;
for(String PGID; (PGID = ProGrpID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOfPro_PROGRP_MIN};
	
	for(int j=0;j&lt;rand;j++)
	{
		String PRID=ProID.readLine();
		if( PRID== null)
		{
			 ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
			 PRID=ProID.readLine();
		}
		
		String data=PGID+&quot;,&quot;+PRID;
		File_2 = new FileOutputStream(&quot;${P_FilePath2}/Map_Product_ProductGRP.csv&quot;, true);
		obj = new PrintStream(File_2);
		this.interpreter.setOut(obj);
		print(data);
		File_2.close();
		
	
	}
}
ProGrpID.close();
ProID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Product_ProductGRP.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Pro_ProGrp_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ProGrp_Product_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Pro_ProGrp_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ProGrp_Product_CSV" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Product_ProductGRP.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProdGrpID,P_ProductID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Mapping_Product_ProductGroup" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_product_group_product` (`product_id`, `product_group_id`) VALUES (${P_ProductID},${P_ProdGrpID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Package_PackageGroup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Package_PackageGroup_Flow Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader PckGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/PackageGroupID.csv&quot;));
BufferedReader PckID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/PackageID.csv&quot;));
int range=${P_NoOfPck_PCKGRP_MAX}-${P_NoOfPck_PCKGRP_MIN}+1;
for(String PCKGID; (PCKGID = PckGrpID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOfPck_PCKGRP_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PCKID=PckID.readLine();
		if( PCKID== null)
		{
			 PckID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/PackageID.csv&quot;));
			 PCKID=PckID.readLine();
		}
		
		String data=PCKGID+&quot;,&quot;+PCKID;
		File_2 = new FileOutputStream(&quot;${P_FilePath2}/Map_Package_PackageGRP.csv&quot;, true);
		obj = new PrintStream(File_2);
		this.interpreter.setOut(obj);
		print(data);
		File_2.close();
		
	
	}
}
PckGrpID.close();
PckID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Package_PackageGRP.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Pck_PckGrp_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Pack_PackGRP_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Pck_PckGrp_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Package_PackageGRP.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_PCKGRP,P_PCK</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_Package_PackageGroup" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_package_group_package` ( `package_id`, `package_group_id`) VALUES (${P_PCK},${P_PCKGRP});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Map_PackageGroup_Profile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Package_Group_Profile_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/UserProfileID.csv&quot;));
BufferedReader PckGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/PackageGroupID.csv&quot;));
int range=${P_NoOf_PCKGRP_User_MAX}-${P_NoOf_PCKGRP_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOf_PCKGRP_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		
		String PGID=PckGrpID.readLine();
		if( PGID== null)
		{
			 PckGrpID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/PackageGroupID.csv&quot;));
			 PGID=PckGrpID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PGID;
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_PackageGRP.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(data);
		File_1.close();
		
	
	}
}
ProfileID.close();
PckGrpID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_PackageGRP.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Profile_PckGrp_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Map_PackageGroup_Profile_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Profile_PckGrp_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Map_PackageGroup_Profile_CSV Data" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_PackageGRP.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_Prof_ID,P_PCKGrp_ID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_PackageGroup_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_package_group_profile` ( `package_group_id`, `profile_id`) VALUES (${P_PCKGrp_ID}, ${P_Prof_ID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mapping_File_Profile" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="File_Profile_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader ProfileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/UserProfileID.csv&quot;));
BufferedReader fileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/file_ID.csv&quot;));
int range=${P_File_User_MAX}-${P_File_User_MIN}+1;
for(String PID; (PID = ProfileID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_File_User_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		
		String FID=fileID.readLine();
		if( FID== null)
		{
			 fileID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/file_ID.csv.csv&quot;));
			 FID=fileID.readLine();
		}
		
		String data=PID+&quot;,&quot;+FID;
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Map_Profile_File.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(data);
		File_1.close();
		
	
	}
}
ProfileID.close();
fileID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Profile_File.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Profile_File_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File_Profile_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Profile_File_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="File_Profile_CSV Data" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Profile_File.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_Profile_ID,P_File_ID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_File_Profile" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`products_file_profile` (`file_id`, `profile_id`) VALUES (${P_File_ID},${P_Profile_ID} );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Map_Tag_Topic" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Map_Tag_Topic_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader TagID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Tag_ID.csv&quot;));
BufferedReader  TopicID= new BufferedReader(new FileReader(&quot;${P_FilePath2}/Topic_ID.csv&quot;));
int range=${P_NoOfTopic_Tag_MAX}-${P_NoOfTopic_Tag_MIN}+1;
for(String PID; (PID = TagID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOfTopic_Tag_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		
		String FID=TopicID.readLine();
		if( FID== null)
		{
			 TopicID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Topic_ID.csv&quot;));
			 FID=TopicID.readLine();
		}
		
		String data=PID+&quot;,&quot;+FID;
		File_1 = new FileOutputStream(&quot;${P_FilePath2}/Map_Tag_Topic.csv&quot;, true);
		obj = new PrintStream(File_1);
		this.interpreter.setOut(obj);
		print(data);
		File_1.close();
		
	
	}
}
TagID.close();
TopicID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Tag_Topic.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Tag_Topic_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Map_Tag_Topic_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Tag_Topic_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Map_Tag_Topic_CSV Data" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Tag_Topic.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_Tag,P_TopicID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map Topic_Tag" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`topics_topic_tag` ( `tag_id`, `topic_id`) VALUES ( ${P_Tag},${P_TopicID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Map_Topic_Product" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Map_Topic_Pro_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader TopicID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Topic_ID.csv&quot;));
BufferedReader ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
int range=${P_NoOfPro_Topic_Max}-${P_NoOfPro_Topic_MIN}+1;
for(String PID; (PID = TopicID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOfPro_Topic_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PROID=ProID.readLine();
		if( PROID== null)
		{
			 ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
			 PROID=ProID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PROID;
		File_3 = new FileOutputStream(&quot;${P_FilePath2}/Map_Topic_Product.csv&quot;, true);
		obj = new PrintStream(File_3);
		this.interpreter.setOut(obj);
		print(data);
		File_3.close();
		
	
	}
}
TopicID.close();
ProID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Topic_Product.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Topic_PRO_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Map_Topic_Pro_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Topic_PRO_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Map_Topic_Pro_CSV Data" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Topic_Product.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_Topic,P_ProID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map Product_topic" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`topics_topic_product` ( `product_id`, `topic_id`) VALUES ( ${P_ProID},${P_Topic} );</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Knowledge" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Create_Knowledge" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfKnowledge}</stringProp>
        </LoopController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="436215386">P_KnowledgeName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="997735652">
                <stringProp name="183906568">${__RandomString(10,abcdefghijklmnopqrstuvwxyz1234567890,)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Package_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/PackageID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_PCKID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="File_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/file_ID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_File_ID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create_Knowledge" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`knowledges_knowledge` ( `title`, `description`, `create_date_time`, `is_published`, `is_public`, `video_url`, `file_id`, `package_id`) VALUES (&quot;ASP_NFT_KNOW_${P_KnowledgeName}&quot;, &quot;This is Knowledge from Aspire NFT&quot;,sysdate(), 1, 1, null, ${P_File_ID}, ${P_PCKID}); </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_Knowledge_ID" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM `hid_devportal`.`knowledges_knowledge` WHERE (title=&quot;ASP_NFT_KNOW_${P_KnowledgeName}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_KnowledgeID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Kno_id=vars.get(&quot;P_KnowledgeID_1&quot;);
String Kno_NAME=vars.get(&quot;P_KnowledgeName&quot;);
String userdata4=Kno_id+&quot;,ASP_NFT_KNOW_&quot;+Kno_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Knowledge_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String Kno_id=vars.get(&quot;P_KnowledgeID_1&quot;);
String Kno_NAME=vars.get(&quot;P_KnowledgeName&quot;);
String userdata4=Kno_id+&quot;,ASP_NFT_KNOW_&quot;+Kno_NAME;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Knowledge_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String kno_id=vars.get(&quot;P_KnowledgeID_1&quot;);
String userdata4=kno_id;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/Knowledge_ID.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_Knowledge_Platform" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`knowledges_knowledge_platform` ( `knowledge_id`, `platform_id`) VALUES (${P_KnowledgeID_1}, 1);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_Knowledge_Subcategory" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`knowledges_knowledge_subcategory` (`knowledge_id`, `subcategory_id`) VALUES ( ${P_KnowledgeID_1}, 1);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Map_Knowledge_Pro_Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
BufferedReader KnowID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/Knowledge_ID.csv&quot;));
BufferedReader ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
int range=${P_NoOfPro_Know_MAX}-${P_NoOfPro_Know_MIN}+1;
for(String PID; (PID = KnowID.readLine()) != null;)
{
	int rand = (int)(Math.random() * range) +${P_NoOfPro_Know_MIN};
	for(int j=0;j&lt;rand;j++)
	{
		String PROID=ProID.readLine();
		if( PROID== null)
		{
			 ProID = new BufferedReader(new FileReader(&quot;${P_FilePath2}/ProductID.csv&quot;));
			 PROID=ProID.readLine();
		}
		
		String data=PID+&quot;,&quot;+PROID;
		File_3 = new FileOutputStream(&quot;${P_FilePath2}/Map_Knowledge_Product.csv&quot;, true);
		obj = new PrintStream(File_3);
		this.interpreter.setOut(obj);
		print(data);
		File_3.close();
		
	
	}
}
KnowID.close();
ProID.close();
int lc=FileUtils.readLines(new File(&quot;${P_FilePath2}/Map_Knowledge_Product.csv&quot;)).size();
String loc=String.valueOf(lc);
vars.put(&quot;P_Kno_PRO_Count&quot;,loc);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Map_Know_Pro_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_Kno_PRO_Count}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Map_Know_Pro_CSV Data" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Map_Knowledge_Product.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_KnowID,P_ProID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Map_Knowledge_Product" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO `hid_devportal`.`knowledges_knowledge_product` (`knowledge_id`, `product_id`) VALUES (${P_KnowID}, ${P_ProID});</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Single File Id from package group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File Id from package group_No_Of_User_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfUser}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="User_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/UserProfileID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_PCKGRP" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT package_group_id FROM `hid_devportal`.`products_package_group_profile` WHERE (profile_id=&quot;${P_ProfID}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PckGrpId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PCKGRP_PCK" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT package_id FROM `hid_devportal`.`products_package_group_package` WHERE (package_group_id=&quot;${P_PckGrpId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PckId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PCK_Name" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT name FROM `hid_devportal`.`products_package` WHERE (id=&quot;${P_PckId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PackName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PCK_File" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id,name FROM `hid_devportal`.`products_file` WHERE (package_id=&quot;${P_PckId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_FileId,P_FileName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String profile_id=vars.get(&quot;P_ProfID&quot;);
String file_id=vars.get(&quot;P_FileId_1&quot;);
String file_NAME=vars.get(&quot;P_FileName_1&quot;);
String packName=vars.get(&quot;P_PackName_1&quot;);
String userdata4=profile_id+&quot;,&quot;+file_id+&quot;,&quot;+file_NAME+&quot;,&quot;+packName;
File_6 = new FileOutputStream(&quot;${P_FilePath2}/User_PCKGRP_FileData.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="AllFile Id from package group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File Id from package group_No_Of_User_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfUser}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="User_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/UserProfileID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_PCKGRP" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id,name , description, version FROM hid_devportal.products_file where package_id in (SELECT distinct  package_id FROM hid_devportal.products_package_group_package where package_group_id in (SELECT package_group_id FROM hid_devportal.products_package_group_profile where profile_id=&quot;${P_ProfID}&quot;));</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">fileData</stringProp>
              <stringProp name="RegexExtractor.regex">(\d+)\t(.+?)\t(.+?)\t(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$2$3$4$</stringProp>
              <stringProp name="RegexExtractor.default">NF_FileData</stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String fileIds=vars.get(&quot;fileData_matchNr&quot;);
int count = Integer.parseInt(fileIds);
String profileID=vars.get(&quot;P_ProfID&quot;);
String fileInfo=profileID+&quot;:&quot;;
for (int i=1;i&lt;=count;i++)
{
	String id= vars.get(&quot;fileData_&quot;+i+&quot;_g1&quot;);
	String fileName= vars.get(&quot;fileData_&quot;+i+&quot;_g2&quot;);
	fileInfo+=id+&quot;;&quot;+fileName;
	if(i!=count)
	{
		fileInfo+=&quot;,&quot;;
	}
}
File_6 = new FileOutputStream(&quot;${P_FilePath}/All_User_PCKGRP_FileData.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(fileInfo);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="File id from userid" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="File id from userid_Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">${P_NoOfUser}</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="USER_ID CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/UserProfileID.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_ProfID</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Tag_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Tag_Data.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_TagID,P_TagName</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Knowledge_CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Mouli.Murugesan/Desktop/HID Scripts/HID script for Login&amp;File Download/NextStepData/Knowledge_Data.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">P_KnowID,P_KnowName</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_PCKGRP" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT package_group_id FROM `hid_devportal`.`products_package_group_profile` WHERE (profile_id=&quot;${P_ProfID}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PckGrpId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PCKGRP_PCK" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT package_id FROM `hid_devportal`.`products_package_group_package` WHERE (package_group_id=&quot;${P_PckGrpId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PckId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_PCK_Name" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT name FROM `hid_devportal`.`products_package` WHERE (id=&quot;${P_PckId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_PackName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_Topic" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT title FROM `hid_devportal`.`topics_topic` WHERE (profile_id=&quot;${P_ProfID}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_TopicN</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USERName" enabled="true">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT email FROM `hid_devportal`.`auth_user` WHERE (id=(SELECT user_id FROM `hid_devportal`.`users_profile` where id=${P_ProfID}));

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_UserName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String profile_id=vars.get(&quot;P_ProfID&quot;);
String username=vars.get(&quot;P_UserName_1&quot;);
String Topic_NAME=vars.get(&quot;P_TopicN_1&quot;);
String Tag_NAME=vars.get(&quot;P_TagName&quot;);
String Know_NAME=vars.get(&quot;P_KnowName&quot;);
String Pck_Name=vars.get(&quot;P_PackName_1&quot;);
String userdata4=profile_id+&quot;,&quot;+username+&quot;,Test@123,&quot;+Topic_NAME+&quot;,&quot;+Tag_NAME+&quot;,&quot;+Know_NAME+&quot;,&quot;+Pck_Name;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Final_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_File" enabled="false">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT file_id FROM `hid_devportal`.`products_file_profile` WHERE (profile_id=&quot;${P_ProfID}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_FileId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="GET_USER_FileName" enabled="false">
            <stringProp name="dataSource">${DB_Var}</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT name FROM `hid_devportal`.`products_file` WHERE (id=&quot;${P_FileId_1}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">P_FileName</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String profile_id=vars.get(&quot;P_ProfID&quot;);
String username=vars.get(&quot;P_UserName_1&quot;);
String Topic_NAME=vars.get(&quot;P_TopicN_1&quot;);
String Tag_NAME=vars.get(&quot;P_TagName&quot;);
String Know_NAME=vars.get(&quot;P_KnowName&quot;);
String Pck_Name=vars.get(&quot;P_PCkName&quot;);
String userdata4=profile_id+&quot;,&quot;+username+&quot;,Test@123,&quot;+file_id+&quot;,&quot;+file_NAME+&quot;,&quot;+Pfileid+&quot;,&quot;+PfileName+&quot;,&quot;+Topic_NAME+&quot;,&quot;+Tag_NAME+&quot;,&quot;+Know_NAME+&quot;,&quot;+Pck_Name;
File_6 = new FileOutputStream(&quot;${P_FilePath}/Final_Data.csv&quot;, true);
obj = new PrintStream(File_6);
this.interpreter.setOut(obj);
print(userdata4);
File_6.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
FileUtils.cleanDirectory(new File(&quot;${P_FilePath2}&quot;)); </stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
